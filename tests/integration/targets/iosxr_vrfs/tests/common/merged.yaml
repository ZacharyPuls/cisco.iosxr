---
- ansible.builtin.debug:
    msg: Start iosxr_vrfs merged integration tests connection={{ ansible_connection}}

- ansible.builtin.include_tasks: _remove_config.yaml

- block:
    - name: Merge provided configuration with device configuration
      cisco.iosxr.iosxr_vrfs: &id001
        config:
          - name: VRF4
            description: VRF4 Description
            evpn_route_sync: 793
            fallback_vrf: "parsed-vrf"
            address_families:
              - afi: "ipv4"
                safi: "unicast"
                export:
                  route_target: "10.0.0.1:300"
                  route_policy: "rm-policy"
                  to:
                    default_vrf:
                      route_policy: "rm-policy"
                    vrf:
                      allow_imported_vpn: "true"
                import_config:
                  route_target: "10.1.3.4:400"
                  route_policy: "test-policy"
                  from:
                    bridge_domain:
                      advertise_as_vpn: "true"
                    default_vrf:
                      route_policy: "test-policy"
                    vrf:
                      advertise_as_vpn: "true"
                maximum:
                  prefix: 100
            remote_route_filtering:
              disable: "true"
            rd: "3:4"
            mhost:
              afi: "ipv4"
              default_interface: "Loopback0"
            vpn:
              id: "2:3"
        state: merged
      register: result

    - name: Assert that before dicts were correctly generated
      ansible.builtin.assert:
        that: "{{ result['before'] == {} }}"

    - name: Assert that correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ merged['commands'] | symmetric_difference(result['commands']) |length == 0 }}"

    - name: Assert that after dicts were correctly generated
      ansible.builtin.assert:
        that:
          - merged['after'] == result['after']

    - name: Merge the provided configuration with the existing running configuration (idempotent)
      cisco.iosxr.iosxr_vrfs: *id001
      register: result

    - name: Assert that the previous task was idempotent
      ansible.builtin.assert:
        that:
          - result['changed'] == false
          - result.commands|length == 0
  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
